{"version":3,"sources":["webpack:///webpack/bootstrap 1b08cd769967f3f5cb22","webpack:///./lib/gameView.js","webpack:///./lib/game.js","webpack:///./lib/jumper.js","webpack:///./lib/platform.js","webpack:///./lib/jellyfish.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;;;;;;AC3BD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,2BAA2B;;AAE9C;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;;;;;ACxKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC7CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bungeeBob.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1b08cd769967f3f5cb22","const Game = require('./game.js');\n\n// these are global\nwidth = 900;\nheight = 600;\n\ngameCanvas = document.querySelector('canvas');\ngameCanvas.width = width;\ngameCanvas.height = height;\nctx = gameCanvas.getContext(\"2d\");\n\nlet innerWidth = window.innerWidth;\ninnerWidth = (innerWidth - width)/2;\n\naddEventListener('resize', () => {\n    innerWidth = window.innerWidth;\n    innerWidth = (innerWidth - width)/2;\n});\n\nconst bungeeBob = new Game();\n\naddEventListener('mousemove', (e) => {\n  bungeeBob.jumper.X = event.clientX - (innerWidth+20);\n});\n\ngameCanvas.addEventListener('click', (e) => {\n  bungeeBob.startGame();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/gameView.js\n// module id = 0\n// module chunks = 0","const Jumper = require('./jumper.js');\nconst Platform = require('./platform.js');\nconst JellyFish = require('./jellyfish.js');\n\nclass Game{\n\n  constructor(){\n    this.image = new Image();\n    this.image.src = \"./assets/background.jpg\";\n    this.numPlatforms = 6;\n    this.platforms = [];\n    this.platformWidth = 100;\n    this.platformHeight = 10;\n    this.animate = null;\n    this.jumper = new Jumper(this);\n    this.speed = 2;\n    this.jellyfish = null;\n  }\n\n  clearScreen(){\n    ctx.clearRect(0, 0, width, height);\n    ctx.drawImage(this.image,0,0);\n  }\n\n  createPlatforms() {\n    let Y = 0;\n\n    for (let i = 0; i < this.numPlatforms; i++) {\n    this.platforms[i] = new Platform(this, Math.random() * (width-this.platformWidth), Y);\n      if (Y < height - this.platformHeight) {\n        Y += Math.floor(height / this.numPlatforms);\n      }\n    }\n  }\n\n  createJellyFish() {\n    this.jellyfish = new JellyFish();\n  }\n\n  renderJellyFish() {\n      ctx.drawImage(this.jellyfish.image, 0, 0, 50, 31, this.jellyfish.X, this.jellyfish.Y, 50, 31);\n  }\n\n  updateJellyFish() {\n    if (this.jellyfish.X - 50 > width || this.jellyfish.hit || this.jellyfish.Y > height) {\n      this.jellyfish.hit = false;\n      this.jellyfish.X = -50;\n      this.jellyfish.Y = Math.random() * 500;\n    } else {\n      this.jellyfish.X += this.jellyfish.swim;\n      this.jellyfish.Y -= 0.5;\n    }\n  }\n\n  swimDown(rate){\n    this.jellyfish.Y += rate;\n  }\n\n\n  currentJumperJumping() {\n    let currentJumper = this.jumper;\n    let currentGame = this;\n\n    if (currentJumper.Y > height * 0.25) {\n      currentJumper.setPos(currentJumper.X, currentJumper.Y - currentJumper.jumpV);\n    } else {\n      // this.swimDown(currentJumper.jumpV / 2);\n      this.platforms.forEach((platform, index) => {\n        platform.Y += currentJumper.jumpV * 0.55;\n      });\n    }\n    currentJumper.jumpV --;\n\n    this.platforms.forEach((platform, index) => {\n      if (platform.Y > height) {\n        currentGame.platforms[index] = new Platform(currentGame, Math.random() * (width - currentGame.platformWidth), platform.Y - (height+50) );\n      }\n      platform.Y += this.speed;\n    });\n\n    if (currentJumper.jumpV === 0) {\n      currentJumper.jumping = false;\n      currentJumper.falling = true;\n      currentJumper.fallV = 1;\n    }\n  }\n\n  currentJumperFalling() {\n    let currentJumper = this.jumper;\n\n    if (currentJumper.Y < height - currentJumper.height/2) {\n      currentJumper.setPos(currentJumper.X, currentJumper.Y + currentJumper.fallV);\n      currentJumper.fallV ++;\n      this.platforms.forEach((platform, index) => {\n        platform.Y += this.speed;\n      });\n    } else {\n      currentJumper.startJump();\n    }\n  }\n\n  checkPlatformCollision(){\n    let currentGame = this;\n\n    for (let i = 0; i < this.platforms.length; i++) {\n\n      if ((currentGame.jumper.falling) &&\n          !(currentGame.jumper.X + currentGame.jumper.width < this.platforms[i].X ||\n            currentGame.jumper.X > this.platforms[i].X + this.platformWidth ||\n            currentGame.jumper.Y + currentGame.jumper.height < this.platforms[i].Y ||\n            currentGame.jumper.Y > this.platforms[i].Y + this.platformHeight)\n\n         ) {currentGame.onPlatformCollision();}\n    }\n  }\n\n  onPlatformCollision() {\n    this.jumper.startJump();\n    this.speed *= 1.01;\n  }\n\n  gameOver() {\n    if (this.jumper.Y > height - this.jumper.height/2) {\n     return true;\n    } else {\n     return false;\n    }\n  }\n\n  gameLoop() {\n    this.clearScreen();\n    this.renderJellyFish();\n    this.updateJellyFish();\n\n    if (this.jumper.jumping) {\n      this.currentJumperJumping();\n    }\n\n    if (this.jumper.falling) {\n     this.currentJumperFalling();\n    }\n\n    this.jumper.render();\n\n    this.platforms.forEach((platform) => {\n     platform.render();\n    });\n\n    this.checkPlatformCollision();\n\n    if (!this.gameOver()) {\n     this.animate = setTimeout(this.gameLoop.bind(this), 20);\n    }\n\n  }\n\n  startGame() {\n    this.jumper.restart();\n    this.jumper.setPos(Math.floor((width - this.jumper.width)*0.25), (height - this.jumper.height)*0.25);\n    this.createPlatforms();\n    this.jumper.jump();\n    this.speed = 2;\n    this.gameLoop();\n  }\n\n}\n\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","class Jumper{\n  constructor(game){\n    this.image = new Image();\n    this.image.src = \"./assets/jumping_sponge.png\";\n    this.width = 72;\n    this.height = 73;\n    this.X = 0;\n    this.Y = 0;\n    this.jumping = false;\n    this.falling = false;\n    this.jumpV = 0;\n    this.fallV = 0;\n  }\n\n  setPos(x, y){\n    this.X = x;\n    this.Y = y;\n  }\n\n  render(){\n    ctx.drawImage(this.image, 0, 0, this.width, this.height, this.X, this.Y, this.width, this.height);\n  }\n\n  jump(){\n    if (!this.jumping && !this.falling) {\n      this.jumping = true;\n      this.jumpV = 20;\n      this.fallV = 0;\n    }\n  }\n\n  startJump(){\n    this.falling = false;\n    this.fallV = 0;\n    this.jump();\n  }\n\n  restart(){\n    this.jumping = false;\n    this.falling = false;\n    this.jumpV = 0;\n    this.fallV = 0;\n  }\n}\n\nmodule.exports = Jumper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/jumper.js\n// module id = 2\n// module chunks = 0","class Platform{\n\n  constructor(game, x, y){\n    this.game = game;\n    this.image = new Image();\n    this.image.src = \"./assets/seaweed.png\";\n    this.X = Math.floor(x);\n    this.Y = y;\n    this.currentPlatform = false;\n  }\n\n  render(){\n    ctx.drawImage(this.image, 0, 0, 100, 10, this.X, this.Y, 100, 10);\n    return this;\n  }\n}\n\nmodule.exports = Platform;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/platform.js\n// module id = 3\n// module chunks = 0","class JellyFish{\n\n  constructor(){\n    this.X =  Math.random() * width;\n    this.Y = Math.random() * height;\n    this.hit = false;\n    this.swim =  (Math.random() * 5) + 0.5 ;\n    this.image = new Image();\n    this.image.src = (\"./assets/jellyfish.png\");\n  }\n}\n\nmodule.exports = JellyFish;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/jellyfish.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}